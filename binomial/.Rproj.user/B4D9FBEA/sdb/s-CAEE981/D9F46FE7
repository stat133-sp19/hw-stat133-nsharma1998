{
    "collab_server" : "",
    "contents" : "context(\"binomial\")\n\n# bin_choose\n\ntest_that(\"bin_choose has correct output\", {\n  expect_equal(bin_choose(n = 5, k = 2), 10)\n  expect_equal(bin_choose(5, 1:3), c(5, 10, 10))\n  expect_error(bin_choose(5, -1))\n})\n\n\n# bin_probability\n\ntest_that(\"bin_probability has correct output\", {\n  n = 5\n  k = 2\n  p = 0.5\n  expect_equal(bin_probability(k, n, p), 10/32)\n  expect_length(bin_probability(k, n, p), 1)\n  expect_type(bin_probability(k, n, p), \"double\")\n})\n\n# bin_distribution\n\ntest_that(\"bin_distribution has correct output\", {\n  n = 5\n  p = 0.5\n  expect_equal(bin_distribution(n, p)$prob, c(0.03125, 0.15625, 0.31250, 0.31250, 0.15625, 0.03125))\n  expect_equal(bin_distribution(n, p)$success, 0:5)\n  expect_equal(typeof(bin_distribution(n, p)), \"list\")\n  expect_length(bin_distribution(n, p), 2)\n})\n\n# bin_cumulative\n\ntest_that(\"bin_cumulative has correct output\", {\n  n = 5\n  p = 0.5\n  expect_equal(bin_cumulative(n, p)$cumulative, c(0.03125, 0.18750, 0.50000, 0.81250, 0.96875, 1.00000))\n  expect_equal(bin_cumulative(n, p)$success, 0:5)\n  expect_equal(typeof(bin_cumulative(n, p)), \"list\")\n  expect_length(bin_cumulative(n, p), 3)\n})\n",
    "created" : 1556907594796.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3102677052",
    "id" : "D9F46FE7",
    "lastKnownWriteTime" : 1556907665,
    "last_content_update" : 1556907665674,
    "path" : "~/Documents/stat133/binomial/tests/testthat/test-binomial.R",
    "project_path" : "tests/testthat/test-binomial.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}